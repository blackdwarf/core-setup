#!/bin/sh
#
# Copyright (c) .NET Foundation and contributors. All rights reserved.
# Licensed under the MIT license. See LICENSE file in the project root for full license information.
#

PACKAGE=$1
INSTALL_DESTINATION=$2
LIBCRYPTO_NAME=libcrypto.1.0.0.dylib
LIBSSL_NAME=libssl.1.0.0.dylib

# Using this form to allow power users to export both of these
if [ -z $OPENSSL_PATH ]; then OPENSSL_PATH=/usr/local/opt/openssl/lib; fi
if [ -z $LINK_DEST ]; then LINK_DEST=/usr/local/lib; fi

# Ugly, but we need this to actually get the version
#VERSION=${INSTALL_PKG_SESSION_ID##"com.microsoft.dotnet.sharedframework.Microsoft.NETCore.App."}
#VERSION=${VERSION%%".component.osx.x64"}
#CORE_LIB_FILE_PATH=$INSTALL_DESTINATION/shared/Microsoft.NETCore.App/$VERSION/System.Security.Cryptography.Native.dylib


# A temporary fix for the permissions issue(s)
chmod -R 755 $INSTALL_DESTINATION/shared

if [ -e "$OPENSSL_PATH/$LIBSSL_NAME" ] && [ -e "$OPENSSL_PATH/$LIBCRYPTO_NAME" ]
then
   if [ ! -e "$LINK_DEST/$LIBSSL_NAME" ] && [ ! -e "$LINK_DEST/$LIBCRYPTO_NAME" ]
   then
       mkdir -p "$LINK_DEST"
       ln -s "$OPENSSL_PATH/$LIBSSL_NAME" "$LINK_DEST"
       ln -s "$OPENSSL_PATH/$LIBCRYPTO_NAME" "$LINK_DEST"
   fi
    #sudo install_name_tool \
        #-add_rpath $OPENSSL_PATH \
        #$CORE_LIB_FILE_PATH
fi
  

exit 0
